#Networking in docker
#Environment variables in java
#Java containerization
#DB healthcheck

services:
  frontend:
    image: ilvendev/mysite-frontend
    deploy:
      mode: replicated
      replicas: 2
      endpoint_mode: dnsrr
    build:
      context: ./frontendcp
      dockerfile: Dockerfile
    depends_on:
      - backend
    networks:
      - my-network
    labels:
      - traefik.enable=true
      - traefik.http.routers.frontend-http.rule=Host(`commercemanager.localhost`)
      - traefik.http.routers.frontend-http.entrypoints=web
      - traefik.http.routers.frontend-http.middlewares=frontend-header@file

  backend:
    image: ilvendev/mysite-backend
    container_name: mysite-backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    depends_on:
      - db
      # db:
      #   condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:mariadb://db:3306/${MYSQL_DATABASE}
      SPRING_DATASOURCE_USERNAME: &DB_USER ${MYSQL_USER:?missing MYSQL_USER}
      SPRING_DATASOURCE_PASSWORD: &DB_PASSWORD ${MYSQL_PASSWORD:?missing MYSQL_PASSWORD}
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_SHOW_SQL: true
      SPRING_H2_CONSOLE_ENABLED: false
    networks:
      - my-network
    labels:
      - traefik.enable=true
      - traefik.http.routers.backend-http.rule=Host(`backend.localhost`)
      - traefik.http.routers.backend-http.entrypoints=web
      - traefik.http.routers.backend-http.middlewares=frontend-header@file

  db:
    image: mariadb:latest
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - my-network
    # healthcheck:
    #   test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "${MYSQL_USER}", "-p${MYSQL_PASSWORD}"]
    #   interval: 10s
    #   timeout: 5s
    #   retries: 5
    #   start_period: 30s


  reverse-proxy:
    image: traefik:v3.2
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock 
      - ./traefik.yaml:/etc/traefik/traefik.yaml:ro
    networks:
      - my-network 

volumes:
  db_data:

networks:
  my-network:
    external: false
